"""Add new fields to ComparableProperty model

Revision ID: e8ea11e7475a
Revises: 
Create Date: 2025-06-15 22:24:07.314282

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e8ea11e7475a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sold_property')
    op.drop_table('property_listing')
    with op.batch_alter_table('appraisal', schema=None) as batch_op:
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=200),
               nullable=False)

    with op.batch_alter_table('comparable_property', schema=None) as batch_op:
        batch_op.add_column(sa.Column('postcode', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('square_feet', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('days_on_market', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('distance_to', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('location_adjustment', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('size_adjustment', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('market_adjustment', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('adjusted_value', sa.Float(), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=256),
               type_=sa.String(length=150),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=256),
               existing_nullable=True)

    with op.batch_alter_table('comparable_property', schema=None) as batch_op:
        batch_op.drop_column('adjusted_value')
        batch_op.drop_column('market_adjustment')
        batch_op.drop_column('size_adjustment')
        batch_op.drop_column('location_adjustment')
        batch_op.drop_column('distance_to')
        batch_op.drop_column('days_on_market')
        batch_op.drop_column('square_feet')
        batch_op.drop_column('price')
        batch_op.drop_column('postcode')

    with op.batch_alter_table('appraisal', schema=None) as batch_op:
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=500),
               nullable=True)

    op.create_table('property_listing',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('external_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('address', sa.VARCHAR(length=200), nullable=False),
    sa.Column('postcode', sa.VARCHAR(length=20), nullable=True),
    sa.Column('property_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('bedrooms', sa.INTEGER(), nullable=True),
    sa.Column('bathrooms', sa.INTEGER(), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=True),
    sa.Column('square_feet', sa.FLOAT(), nullable=True),
    sa.Column('days_on_market', sa.INTEGER(), nullable=True),
    sa.Column('sstc', sa.BOOLEAN(), nullable=True),
    sa.Column('latitude', sa.FLOAT(), nullable=True),
    sa.Column('longitude', sa.FLOAT(), nullable=True),
    sa.Column('distance_to', sa.FLOAT(), nullable=True),
    sa.Column('summary', sa.TEXT(), nullable=True),
    sa.Column('highest_offer', sa.FLOAT(), nullable=True),
    sa.Column('url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('date_listed', sa.DATETIME(), nullable=True),
    sa.Column('date_sold', sa.DATETIME(), nullable=True),
    sa.Column('energy_rating', sa.VARCHAR(length=10), nullable=True),
    sa.Column('price_per_sqft', sa.FLOAT(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('sold_property',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('postcode', sa.VARCHAR(length=20), nullable=True),
    sa.Column('property_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('sold_price', sa.FLOAT(), nullable=True),
    sa.Column('date_sold', sa.DATETIME(), nullable=True),
    sa.Column('bedrooms', sa.INTEGER(), nullable=True),
    sa.Column('bathrooms', sa.INTEGER(), nullable=True),
    sa.Column('square_feet', sa.FLOAT(), nullable=True),
    sa.Column('energy_rating', sa.VARCHAR(length=10), nullable=True),
    sa.Column('price_per_sqft', sa.FLOAT(), nullable=True),
    sa.Column('listing_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['listing_id'], ['property_listing.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
