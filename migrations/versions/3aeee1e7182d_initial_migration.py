"""Initial migration

Revision ID: 3aeee1e7182d
Revises: 
Create Date: 2025-09-29 20:32:02.234241

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3aeee1e7182d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('password', sa.String(length=150), nullable=True),
    sa.Column('first_name', sa.String(length=150), nullable=True),
    sa.Column('company_name', sa.String(length=150), nullable=True),
    sa.Column('company_website', sa.String(length=200), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('INVITED', 'ACTIVE', 'DISABLED', name='userstatus'), nullable=False),
    sa.Column('invitation_token', sa.String(length=100), nullable=True),
    sa.Column('invitation_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('invitation_token')
    )
    op.create_table('appraisal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.Column('land_size', sa.Float(), nullable=True),
    sa.Column('floor_area', sa.Float(), nullable=True),
    sa.Column('condition', sa.Integer(), nullable=True),
    sa.Column('features', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('s3_path', sa.String(length=1024), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('business_id', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('UPLOADED', 'PROCESSING', 'COMPLETED', 'FAILED', name='documentstatus'), nullable=False),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('s3_path')
    )
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_business_id'), ['business_id'], unique=False)

    op.create_table('chat_message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=1000), nullable=False),
    sa.Column('is_user', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('appraisal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appraisal_id'], ['appraisal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comparable_property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('floor_area', sa.Float(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('square_feet', sa.Float(), nullable=True),
    sa.Column('days_on_market', sa.Integer(), nullable=True),
    sa.Column('distance_to', sa.Float(), nullable=True),
    sa.Column('location_adjustment', sa.Float(), nullable=True),
    sa.Column('size_adjustment', sa.Float(), nullable=True),
    sa.Column('market_adjustment', sa.Float(), nullable=True),
    sa.Column('adjusted_value', sa.Float(), nullable=True),
    sa.Column('appraisal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appraisal_id'], ['appraisal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extracted_property',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('property_address', sa.String(length=500), nullable=False),
    sa.Column('property_type', sa.String(length=100), nullable=True),
    sa.Column('number_bedrooms', sa.Integer(), nullable=True),
    sa.Column('number_bathrooms', sa.Float(), nullable=True),
    sa.Column('size_sqft', sa.Float(), nullable=True),
    sa.Column('size_unit', sa.String(length=20), nullable=True),
    sa.Column('asking_price', sa.Float(), nullable=True),
    sa.Column('sold_price', sa.Float(), nullable=True),
    sa.Column('price_per_sqft', sa.Float(), nullable=True),
    sa.Column('rent_pcm', sa.Float(), nullable=True),
    sa.Column('yield_percentage', sa.Float(), nullable=True),
    sa.Column('condition', sa.String(length=100), nullable=True),
    sa.Column('tenure', sa.String(length=100), nullable=True),
    sa.Column('lease_details', sa.Text(), nullable=True),
    sa.Column('days_on_market', sa.Integer(), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=True),
    sa.Column('epc_rating', sa.String(length=10), nullable=True),
    sa.Column('listed_building_grade', sa.String(length=50), nullable=True),
    sa.Column('other_amenities', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('geocoded_address', sa.String(length=500), nullable=True),
    sa.Column('geocoding_confidence', sa.Float(), nullable=True),
    sa.Column('geocoding_status', sa.String(length=50), nullable=True),
    sa.Column('source_document_id', sa.UUID(), nullable=True),
    sa.Column('business_id', sa.String(length=150), nullable=False),
    sa.Column('extracted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('extracted_property', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_extracted_property_business_id'), ['business_id'], unique=False)

    op.create_table('property_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('property_type', sa.String(length=50), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('square_feet', sa.Float(), nullable=True),
    sa.Column('days_on_market', sa.Integer(), nullable=True),
    sa.Column('sstc', sa.Boolean(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('distance_to', sa.Float(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('highest_offer', sa.Float(), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('appraisal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appraisal_id'], ['appraisal.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('property_data')
    with op.batch_alter_table('extracted_property', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_extracted_property_business_id'))

    op.drop_table('extracted_property')
    op.drop_table('comparable_property')
    op.drop_table('chat_message')
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_business_id'))

    op.drop_table('document')
    op.drop_table('appraisal')
    op.drop_table('user')
    # ### end Alembic commands ###
